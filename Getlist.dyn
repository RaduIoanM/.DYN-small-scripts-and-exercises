{
  "Uuid": "7e30404b-44e8-4f4a-a0aa-45d457a85bae",
  "IsCustomNode": false,
  "Description": "Gets casework elements and turns them into an excel llist ",
  "Name": "Getlist",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "c318a56cfa9c4becbe180f6700101ff0",
      "Name": "Input - Family Name (Familename)",
      "Type": "string",
      "Type2": "string",
      "Value": "Family Name",
      "Description": "Creates a string."
    },
    {
      "Id": "ac7c1053b41343e285435d89ebf0c7dc",
      "Name": "Where would you like the csv saved? ",
      "Type": "string",
      "Type2": "string",
      "Value": "..\\..\\..\\Downloads\\BKP_FAM\\tes.xlsx",
      "Description": "Allows you to select a file on the system and returns its file path"
    }
  ],
  "Outputs": [
    {
      "Id": "424188afa5514ea3bc0c7c5d0d25af92",
      "Name": "Coda ",
      "Type": "string",
      "InitialValue": "Kudos! Now go to the folder and double check it :) let me know if it workedfeedback here  ðŸ¦†  https://github.com/RaduIoanM  ðŸ¦† Thanks a bunch! ",
      "Description": "Creates a string."
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 123,
      "SelectedString": "OST_Casework",
      "Id": "8f6d144f094c442e8ed04c4baa871bf4",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "604530991e834b12a6cc9066c1a18a7f",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "6f78e8046ead4a40a9ee6e30b058e8bb",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3f59989d2507449b973b0d4426a90675",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8594d45a2e00458d89ecc4fa759b67ef",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "43b4e8b356cc41aba41a5467e3707cc6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8ebf8ac9a2114de989a5d844299e73ae",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27782013d1a849d8b9db13caf15139cf",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d4fca7f159149649dade86f8e747c0a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c43e1fc6cd6b496c96c53486c04fd307",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "626abd03c09b4810a0e66ac09718914f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b8283a350ff4f3e9ba1fa3f017ae6ae",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "SerializedWidth": 0.0,
      "SerializedHeight": 0.0,
      "Id": "c318a56cfa9c4becbe180f6700101ff0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae6c9c9624ab4170a754debcfebf1605",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string.",
      "InputValue": "Family Name"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9c5c7f673f8541d1aba77d091d144f22",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cd7aeb053063498cb9dd3c933c83c63b",
          "Name": "element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1f88cd2dd2242bdbc1d7641235b4895",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "archilab.Revit.Elements.Elements.Type@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Get Element Type.\n\nElements.Type (element: Element): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c50d16d046dc4d52894f2a5070e9016a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa024e00fece48d8bde738fe3dfebf81",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e98072543f247449d483482f9894569",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "OUT = []\r\nfor e in IN[0]:\r\n    try:\r\n        g = e.Group\r\n        OUT.append(g.Name)\r\n    except:\r\n        OUT.append(\"Ungrouped\")\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "34f367f7c81a4da1bc8a5accce7ea1b8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2e324926d4ab4003b8f90ac0e8770f18",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "567be57e34cd46a6922727b89cf6e415",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "44f7d0e2e2f240c58128b31edc122ad3",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f5d3ab05fd0747aa99d7888809dac615",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cd7e0ce24bf4d31bdc1806894e591e0",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a452c3fea1ab4b838c81a4a548a34e36",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb0821d2105a42b98df9cfebf8bacc17",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "363c61147cf84d879ad64c1a0f37c4d3",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "519cccdf5058418cb8748fab2da9b1e0",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7aad0a9bda44ea9b8dd1a7d5869676f",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "200102007f684cceacfe1dcf645d710e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f69b2b2cf527452f923606bdc6a256ed",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8262007c080542c5b17608ae4760d5b4",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "Id": "ac7c1053b41343e285435d89ebf0c7dc",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72996c74922942ddac858986201a3877",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system and returns its file path",
      "HintPath": "C:\\Users\\radum\\Downloads\\BKP_FAM\\tes.xlsx",
      "InputValue": "..\\..\\..\\Downloads\\BKP_FAM\\tes.xlsx"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "57c48077d6c348e4901d3edd3a7f52f6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d3599bb5e7d4806aef2ac9355a038df",
          "Name": "filePath",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d1d8efc301349948b6f34aac2c8a928",
          "Name": "data",
          "Description": "var[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0f84269728d422591b22641b5cffb70",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSOffice.Data.ExportCSV@string,var[][]",
      "Replication": "Auto",
      "Description": "Data.ExportCSV (filePath: string, data: var[][]): void"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "SerializedWidth": 0.0,
      "SerializedHeight": 0.0,
      "Id": "424188afa5514ea3bc0c7c5d0d25af92",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80fbb835dd98436bbcd519a10949c064",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string.",
      "InputValue": "Kudos! Now go to the folder and double check it :) let me know if it workedfeedback here  ðŸ¦†  https://github.com/RaduIoanM  ðŸ¦† Thanks a bunch! "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "Id": "19daa266353841d7be2384ba337c15be",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ee3912a460cc4d9c8d39902f25e54789",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01219ce7f88443749c1381dd37215d5e",
          "Name": "Host",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "63c0355f77a24cf79eca1b6509f0dfc1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "958294ec37524fa9bd7c1eae7e5d5801",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "491896813397496b93908b60b45c482c",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e01f25cdd5694ecf9e825367d3749d74",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1b65192e4d1347889565849afb220838",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd5500ebd9434c2687f45980a8198a38",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f0f0e9f09a84967915070b2973aa0eb",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07f33bc04d914ecbbc02418c075604e8",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "elements = IN[0]\r\nout = []\r\n\r\n# Only include items that *do not* look like subcomponents\r\nexclude = [\"platte\", \"rohr\", \"tisch\", \"rahmen\", \"front\"]\r\n\r\nfor e in elements:\r\n    try:\r\n        name = e.Name.lower()\r\n        if not any(x in name for x in exclude):\r\n            out.append(e)\r\n    except:\r\n        continue\r\n\r\nOUT = out\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "728abeaadb5249c8b63bb06d2932a1e5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ad92730d859e4ccc99aff8ae5e26151e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39ce008b78134bbda7c2de163c181dab",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c6b6b158ba6246ba968ae45ef94c741e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58bd32c200ed40b1b67ea6a4a89671c9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16b53201441e426aa74ef6496d1ccf4c",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90fd718ef85b45a99c6ac5cb8eae51a4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "SerializedWidth": 0.0,
      "SerializedHeight": 0.0,
      "Id": "7e24e84c65b24f5682e93a219e834e3b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "942ff2c7237249a58a94d1d487412e9f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string.",
      "InputValue": "Comments"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "953d7dad241645a59dfac8ccfccf456e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fd485127c326467caa35fc4ce8a692a5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53469b7e346c48089adfb8a9bab55c7a",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31cfb9f46d3743eba6dae40d66b2d3ca",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "SerializedWidth": 0.0,
      "SerializedHeight": 0.0,
      "Id": "f92b2e536609402897f8c024b2220d84",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9bb47c679e034eb29d0d695bd6fd2888",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string.",
      "InputValue": "Mark"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import csv\r\nimport os\r\nfrom System.Diagnostics import Process\r\n\r\nfile_path = IN[0]\r\ndata = IN[1]\r\n\r\n# Ensure CSV extension\r\nif not file_path.lower().endswith(\".csv\"):\r\n    file_path = os.path.splitext(file_path)[0] + \".csv\"\r\n\r\n# Write CSV\r\nwith open(file_path, 'w', newline='') as f:\r\n    writer = csv.writer(f)\r\n    for row in data:\r\n        writer.writerow(row)\r\n\r\n# Launch Excel with full path\r\nexcel_path = r\"C:\\Program Files\\Microsoft Office\\root\\Office16\\EXCEL.EXE\"\r\nif os.path.exists(file_path) and os.path.exists(excel_path):\r\n    Process.Start(excel_path, file_path)\r\n\r\nOUT = file_path\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5ce1a4dd0c954fbd8ed442f472471afb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b6741183b8334d16b40e6f17628d787e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f008e41d5a824014927eddc39a61710e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f0cfd65f6e14f6f8a8a094d8fe27a5c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc88a5b5485840c2b0278f871306bef3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "604530991e834b12a6cc9066c1a18a7f",
      "End": "3f59989d2507449b973b0d4426a90675",
      "Id": "927afce7817b4fe882bd598feaa2609f",
      "IsHidden": "False"
    },
    {
      "Start": "8594d45a2e00458d89ecc4fa759b67ef",
      "End": "ad92730d859e4ccc99aff8ae5e26151e",
      "Id": "dcb25a54a9d44cceb486d1a6ff3793ef",
      "IsHidden": "False"
    },
    {
      "Start": "8d4fca7f159149649dade86f8e747c0a",
      "End": "2e324926d4ab4003b8f90ac0e8770f18",
      "Id": "25dee5dcf0cc41429cf270b39c7af1e4",
      "IsHidden": "False"
    },
    {
      "Start": "8d4fca7f159149649dade86f8e747c0a",
      "End": "7cd7e0ce24bf4d31bdc1806894e591e0",
      "Id": "7128d3fc774e4c52b1fcea633a4acf39",
      "IsHidden": "False"
    },
    {
      "Start": "3b8283a350ff4f3e9ba1fa3f017ae6ae",
      "End": "f5d3ab05fd0747aa99d7888809dac615",
      "Id": "851c61d427c441679ae4e8bb780340bd",
      "IsHidden": "False"
    },
    {
      "Start": "ae6c9c9624ab4170a754debcfebf1605",
      "End": "27782013d1a849d8b9db13caf15139cf",
      "Id": "dd033f67c30d4b5eb74939324d9f64b8",
      "IsHidden": "False"
    },
    {
      "Start": "2e98072543f247449d483482f9894569",
      "End": "a452c3fea1ab4b838c81a4a548a34e36",
      "Id": "ef892e8e446e452cb9201e7366cd4359",
      "IsHidden": "False"
    },
    {
      "Start": "567be57e34cd46a6922727b89cf6e415",
      "End": "fb0821d2105a42b98df9cfebf8bacc17",
      "Id": "d16c91951ffc41429b7413c50fb271f5",
      "IsHidden": "False"
    },
    {
      "Start": "e7aad0a9bda44ea9b8dd1a7d5869676f",
      "End": "f69b2b2cf527452f923606bdc6a256ed",
      "Id": "8bcd28cf79454b409634a8385da6ad27",
      "IsHidden": "False"
    },
    {
      "Start": "8262007c080542c5b17608ae4760d5b4",
      "End": "8d1d8efc301349948b6f34aac2c8a928",
      "Id": "4ffc49d73f824594a72fd54917eb5198",
      "IsHidden": "False"
    },
    {
      "Start": "8262007c080542c5b17608ae4760d5b4",
      "End": "f008e41d5a824014927eddc39a61710e",
      "Id": "5f54b20f76d9407fa461b219495e0a4d",
      "IsHidden": "False"
    },
    {
      "Start": "72996c74922942ddac858986201a3877",
      "End": "b6741183b8334d16b40e6f17628d787e",
      "Id": "4837dfeb5ee44ffca84a8a0cedcaa143",
      "IsHidden": "False"
    },
    {
      "Start": "01219ce7f88443749c1381dd37215d5e",
      "End": "958294ec37524fa9bd7c1eae7e5d5801",
      "Id": "9e2c477ad2734b729c7c48e3a43d1d45",
      "IsHidden": "False"
    },
    {
      "Start": "491896813397496b93908b60b45c482c",
      "End": "dd5500ebd9434c2687f45980a8198a38",
      "Id": "f9bf89c69c824e20ae9a3be0b6824042",
      "IsHidden": "False"
    },
    {
      "Start": "39ce008b78134bbda7c2de163c181dab",
      "End": "626abd03c09b4810a0e66ac09718914f",
      "Id": "c18c87f1e7604f0ca6222246df765289",
      "IsHidden": "False"
    },
    {
      "Start": "39ce008b78134bbda7c2de163c181dab",
      "End": "8ebf8ac9a2114de989a5d844299e73ae",
      "Id": "5cae550998784f4091ee2192e25f774a",
      "IsHidden": "False"
    },
    {
      "Start": "39ce008b78134bbda7c2de163c181dab",
      "End": "cd7aeb053063498cb9dd3c933c83c63b",
      "Id": "ed01858cdb5644c99ebbff3e55487b81",
      "IsHidden": "False"
    },
    {
      "Start": "39ce008b78134bbda7c2de163c181dab",
      "End": "fa024e00fece48d8bde738fe3dfebf81",
      "Id": "69d07ca431b0483c9ea74c89ba1507f8",
      "IsHidden": "False"
    },
    {
      "Start": "39ce008b78134bbda7c2de163c181dab",
      "End": "58bd32c200ed40b1b67ea6a4a89671c9",
      "Id": "1f39b4869ca54770ab4d439c469629d2",
      "IsHidden": "False"
    },
    {
      "Start": "39ce008b78134bbda7c2de163c181dab",
      "End": "fd485127c326467caa35fc4ce8a692a5",
      "Id": "ad0af0fa56964633a55d531c4d39ebf0",
      "IsHidden": "False"
    },
    {
      "Start": "90fd718ef85b45a99c6ac5cb8eae51a4",
      "End": "363c61147cf84d879ad64c1a0f37c4d3",
      "Id": "aae4e9bf0df847a585662647322278b9",
      "IsHidden": "False"
    },
    {
      "Start": "942ff2c7237249a58a94d1d487412e9f",
      "End": "16b53201441e426aa74ef6496d1ccf4c",
      "Id": "6bf18a470876429982cbdf5d9fc8a6f5",
      "IsHidden": "False"
    },
    {
      "Start": "31cfb9f46d3743eba6dae40d66b2d3ca",
      "End": "519cccdf5058418cb8748fab2da9b1e0",
      "Id": "87824c1367554142b306912a36fb047b",
      "IsHidden": "False"
    },
    {
      "Start": "9bb47c679e034eb29d0d695bd6fd2888",
      "End": "53469b7e346c48089adfb8a9bab55c7a",
      "Id": "3d46a4d2e5414c778e52cd356079932c",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "f3228c78-e4a0-42f0-8ec3-a19daf7157bb"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "archi-lab.net",
      "Version": "2025.300.1225",
      "ReferenceType": "Package",
      "Nodes": [
        "9c5c7f673f8541d1aba77d091d144f22"
      ]
    },
    {
      "Name": "Genius Loci",
      "Version": "2024.5.29",
      "ReferenceType": "Package",
      "Nodes": [
        "19daa266353841d7be2384ba337c15be"
      ]
    },
    {
      "Name": "tes.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "ac7c1053b41343e285435d89ebf0c7dc"
      ]
    },
    {
      "Name": "tes.csv",
      "ReferenceType": "External",
      "Nodes": [
        "5ce1a4dd0c954fbd8ed442f472471afb"
      ]
    }
  ],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": "https://github.com/RaduIoanM",
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "3.5",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "9.1",
      "Data": {}
    }
  ],
  "Author": "Radu",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.5.0.8297",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "8f6d144f094c442e8ed04c4baa871bf4",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -176.95147624372362,
        "Y": -110.3418694934391
      },
      {
        "Id": "6f78e8046ead4a40a9ee6e30b058e8bb",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 264.2848546826684,
        "Y": 88.45715437661646
      },
      {
        "Id": "43b4e8b356cc41aba41a5467e3707cc6",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2193.66872245158,
        "Y": 1223.4289971194837
      },
      {
        "Id": "c43e1fc6cd6b496c96c53486c04fd307",
        "Name": "Element.Id",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1729.6236324802464,
        "Y": -134.35808924845134
      },
      {
        "Id": "c318a56cfa9c4becbe180f6700101ff0",
        "Name": "Input - Family Name (Familename)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1754.0758688885162,
        "Y": 1374.3164842985323
      },
      {
        "Id": "9c5c7f673f8541d1aba77d091d144f22",
        "Name": "Elements.Type",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1853.202215466628,
        "Y": 333.79921990044346
      },
      {
        "Id": "c50d16d046dc4d52894f2a5070e9016a",
        "Name": "Element.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2121.389565879338,
        "Y": 779.6438035502217
      },
      {
        "Id": "34f367f7c81a4da1bc8a5accce7ea1b8",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2759.754240415161,
        "Y": 1264.2221689432986
      },
      {
        "Id": "44f7d0e2e2f240c58128b31edc122ad3",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3118.669924180046,
        "Y": 919.5738217759128
      },
      {
        "Id": "200102007f684cceacfe1dcf645d710e",
        "Name": "List.Transpose",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3413.8829204099175,
        "Y": 981.601458633468
      },
      {
        "Id": "ac7c1053b41343e285435d89ebf0c7dc",
        "Name": "Where would you like the csv saved? ",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3667.6459918585397,
        "Y": 755.1195660719109
      },
      {
        "Id": "57c48077d6c348e4901d3edd3a7f52f6",
        "Name": "Data.ExportCSV",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 3864.688860300927,
        "Y": 1287.861332887591
      },
      {
        "Id": "424188afa5514ea3bc0c7c5d0d25af92",
        "Name": "Coda ",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4864.088526513191,
        "Y": 1078.740107652447
      },
      {
        "Id": "19daa266353841d7be2384ba337c15be",
        "Name": "Element Host",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 510.989601231636,
        "Y": 1050.2540742930037
      },
      {
        "Id": "63c0355f77a24cf79eca1b6509f0dfc1",
        "Name": "Object.IsNull",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 768.0205057181973,
        "Y": 1169.8026199716783
      },
      {
        "Id": "e01f25cdd5694ecf9e825367d3749d74",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 1099.976660521636,
        "Y": 993.063925285518
      },
      {
        "Id": "728abeaadb5249c8b63bb06d2932a1e5",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1019.9296414627843,
        "Y": 171.83012980400474
      },
      {
        "Id": "c6b6b158ba6246ba968ae45ef94c741e",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2202.7527293488843,
        "Y": 1632.9356533448397
      },
      {
        "Id": "7e24e84c65b24f5682e93a219e834e3b",
        "Name": "Input - Family Name (Familename)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1745.1905464334309,
        "Y": 1722.4016629143268
      },
      {
        "Id": "953d7dad241645a59dfac8ccfccf456e",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2189.015468462653,
        "Y": 1919.9685932841967
      },
      {
        "Id": "f92b2e536609402897f8c024b2220d84",
        "Name": "Input - Family Name (Familename)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1731.4532855471998,
        "Y": 2009.4346028536838
      },
      {
        "Id": "5ce1a4dd0c954fbd8ed442f472471afb",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4642.183093182464,
        "Y": 1077.0448508332104
      }
    ],
    "Annotations": [
      {
        "Id": "d70a1de654e34de48bb0f87aeea952bc",
        "Title": "Title <Double click here to edit group title>",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "19daa266353841d7be2384ba337c15be",
          "63c0355f77a24cf79eca1b6509f0dfc1",
          "e01f25cdd5694ecf9e825367d3749d74"
        ],
        "HasNestedGroups": false,
        "Left": 500.989601231636,
        "Top": 919.7305919521847,
        "Width": 843.6537259566667,
        "Height": 381.73869468616033,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 993.063925285518,
        "InitialHeight": 338.40536135282696,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1917.990016396113,
    "Y": -389.61789551340553,
    "Zoom": 0.6000816380832573
  }
}